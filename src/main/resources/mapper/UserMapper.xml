<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stotk.mybatisdemo.mapper.mapperImp.UserMapperImp">
    <resultMap id="userMap" type="com.stotk.mybatisdemo.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="selectById" resultMap="userMap">
        SELECT * FROM sys_user WHERE id =#{id}
    </select>
    <!--考虑性能方面，通常会指定查询列-->
    <select id="selectAll" resultMap="userMap">
        SELECT id,
         user_name userName,
         user_password userPassword,
         user_email userEmail,
         head_img headImg,
         create_time createTime
         FROM sys_user
    </select>
    <select id="selectRolesByUserId" resultType="SysRole">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime,
            u.user_name as 'user.userName',
            u.user_em ail as 'user.userEmail'
        from sys_user u
            inner join sys_user_role ur
                  on u.id = ur.user_id
            inner join sys_role r
                  on ur.role_id = r.id
        where u.id =#{userId}
    </select>
    <insert id="insertUser">
        INSERT INTO sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        VALUE(#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUserIndex" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(
            user_name,user_password,user_email,
            user_info,head_img,create_time)
        VALUE(
            #{userName},#{userPassword},
            #{userEmail},#{userInfo},
            #{headImg,jdbcType=BLOB},
            #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUserReturnKey">
        INSERT INTO sys_user(
        user_name,user_password,user_email,
        user_info,head_img,create_time)
        VALUE(
        #{userName},#{userPassword},
        #{userEmail},#{userInfo},
        #{headImg,jdbcType=BLOB},
        #{createTime,jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateById" parameterType="SysUser">
        UPDATE sys_user
        SET user_name=#{userName},
            user_password=#{userPassword},user_email=#{userEmail},
            user_info=#{userInfo},head_img=#{headImg,jdbcType=BLOB},
            create_time=#{createTime,jdbcType=TIMESTAMP}
        WHERE id=#{id}
    </update>
    <delete id="deleteById">
        DELETE FROM sys_user WHERE id=#{id}
    </delete>
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="SysRole">
        SELECT r.id,r.role_name roleName,r.enabled,r.create_by createBy,r.create_time createTime
        from sys_user u
	      inner join sys_user_role ur on u.id = ur.user_id
	      inner join sys_role r on ur.role_id = r.id
        where
	      u.id =1 and r.enabled =1;
    </select>
    <select id="selectUserByIf" resultType="SysUser">
        SELECT id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        head_img headImg,
        create_time createTime
        FROM sys_user
        <where>
            <if test="@com.stotk.mybatisdemo.utils.StringUtil@isNotEmpty(userName)">
                <bind name="userNameLike" value="'%'+userName+'%'"/>
                and user_name like #{userNameLike}
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email like concat('%',#{userEmail},'%')
            </if>
        </where>
    </select>
    <update id="updateByIdSelective">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                user_name= #{userName},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password= #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info= #{userlnfo},
            </if>
            <if test="headImg != null">
                head_img = #{headlmg,jdbcType=BLOB},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            id = #{id},
        </set>
        where id = #{id}
    </update>
    <select id="selectByIdOrUserName" parameterType="SysUser" resultType="SysUser">
        SELECT id,
        user_name userName,
        user_password userPassword,
        user_email userEmail ,
        user_info userinfo ,
        head_img headImg ,
        create_time createTime
        from sys_user
        where 1 = 1
        <choose>
            <when test="id != 0">
                and id = #{id}
            </when>
            <when test="userName != null and userName !=''">
                and user_name = #{userName}
            </when>
            <when test="userEmail != null and userEmail != ''">
                and user_email= #{userEmail}
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>
    <select id="selectByIdList" resultType="SysUser">
        SELECT id,
        user_name userName ,
        user_password userPassword ,
        user_email userEmail,
        user_info userInfo ,
        head_img headImg,
        create_time createTime
        from sys_user
        WHERE id in
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>
    <insert id="insertSysUserList" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        values
        <foreach collection="list" item="user" separator=",">
            (#{user.userName},#{user.userPassword},#{user.userEmail},#{user.userInfo},#{user.headImg,jdbcType=BLOB},#{user.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <!--批量更新-->
    <update id="updateByMap">
        UPDATE sys_user
        SET
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        WHERE id=#{id}
    </update>
</mapper>